log_format seafileformat '$http_x_forwarded_for $remote_addr [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $upstream_response_time';

# Required for only office document server
map $http_x_forwarded_proto $the_scheme {
    default $http_x_forwarded_proto;
    "" $scheme;
}

map $http_x_forwarded_host $the_host {
    default $http_x_forwarded_host;
    "" $host;
}

map $http_upgrade $proxy_connection {
    default upgrade;
    "" close;
}

server {
    root /var/www/html;

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html;

    server_name seafile.company.com;
    client_max_body_size 10m;

    location / {
        proxy_pass         http://127.0.0.1:8000/;
        proxy_read_timeout 310s;
        proxy_set_header   Host $host;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Forwarded "for=$remote_addr;proto=https";

        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   Connection "";
        proxy_http_version 1.1;

        client_max_body_size 0;

        access_log /var/log/nginx/seahub.access.log seafileformat;
        error_log  /var/log/nginx/seahub.error.log;

    }

    location /seafhttp {
        rewrite                 ^/seafhttp(.*)$ $1 break;
        proxy_pass              http://127.0.0.1:8082;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        client_max_body_size    0;
        proxy_connect_timeout   36000s;
        proxy_read_timeout      36000s;
        proxy_request_buffering off;

        access_log /var/log/nginx/seafhttp.access.log seafileformat;
        error_log  /var/log/nginx/seafhttp.error.log;
    }

    location /seafdav {
        client_max_body_size    0;
        proxy_request_buffering off;

        proxy_connect_timeout  360s;
        proxy_read_timeout     360s;
        proxy_send_timeout     360s;
        send_timeout           360s;

        proxy_pass       http://127.0.0.1:8080;
        proxy_set_header Host $host;

        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Forwarded "for=$remote_addr;proto=https";
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;

        access_log /var/log/nginx/seafdav.access.log seafileformat;
        error_log  /var/log/nginx/seafdav.error.log;
    }

    location /onlyofficeds/ {
        # THIS ONE IS IMPORTANT ! - Trailing slash !
        proxy_pass http://127.0.0.1:8081/;

        proxy_http_version    1.1;
        client_max_body_size  100M; # Limit Document size to 100MB
        proxy_read_timeout    3600s;
        proxy_connect_timeout 3600s;
        proxy_set_header      Upgrade $http_upgrade;
        proxy_set_header      Connection $proxy_connection;

        # THIS ONE IS IMPORTANT ! - Subfolder and NO trailing slash !
        proxy_set_header X-Forwarded-Host $the_host/onlyofficeds;


        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Forwarded "for=$remote_addr;proto=https";

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        access_log /var/log/nginx/onlyoffice.access.log seafileformat;
        error_log  /var/log/nginx/onlyoffice.error.log;
    }

    location /notification/ping {
        proxy_pass http://127.0.0.1:8083/ping;
        access_log      /var/log/nginx/notification.access.log seafileformat;
        error_log       /var/log/nginx/notification.error.log;
    }
    location /notification {
        proxy_pass http://127.0.0.1:8083/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        access_log      /var/log/nginx/notification.access.log seafileformat;
        error_log       /var/log/nginx/notification.error.log;
    }

    location ~ /\.git {
        deny all;
    }

    # Optional error pages remove if not needed
    error_page 403 /forbidden.html;
    location = /forbidden.html {
        root /var/www/html;
        internal;
    }

    # Optional error pages remove if not needed
    error_page 502 /maintenance.html;
    error_page 504 /maintenance.html;
    error_page 500 /maintenance.html; 
    location = /maintenance.html {
        root /usr/share/nginx/html;
        internal;
    }

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/seafile.company.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/seafile.company.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
